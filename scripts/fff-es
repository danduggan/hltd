#!/bin/env python
#
#restart of fff services (elasticsearch and hltd)
#
import os,sys
from subprocess import Popen
from subprocess import PIPE
import time
import syslog


def executeService(service,commands):
   arr = [os.path.join('/etc/init.d',service)]
   arr.append(commands)
   proc = Popen(arr, stdout=PIPE)
   output = proc.communicate()[0]
   time.sleep(.1)
   if proc.returncode==0:
       print commands+' '+service+ ':\t\t\t\t [  \033[1;32mOK\033[0;39m  ]'
       return 0
   else:
      print commands + ' ' + service + '  (return code '+str(proc.returncode)+') : [  \033[1;31mFAILED\033[0;39m  ]'
      print 'command output:\n',output
      return proc.returncode

def reconfigureES():
  proc = Popen(['/etc/init.d/elasticsearch','status'], stdout=PIPE)
  output = proc.communicate()[0]
  if proc.returncode==0:
      print "Unable to reconfigure if elasticsearch is running",' [  \033[1;31mFAILED\033[0;39m  ]'
      return 1

  proc = Popen('/opt/fff/configurefff.sh', stdout=PIPE, stderr=PIPE)
  output = proc.communicate()[0]
  if proc.returncode!=0:
      print 'Failed to run reconfigure script: ',output,' [  \033[1;31mFAILED\033[0;39m  ]'
      return 1
  time.sleep(.1)
  return 0

if __name__ == "__main__":

  if len(sys.argv) >=2:

    if 'start' == sys.argv[1]:
        if reconfigureES()==0:
            rc1=executeService('elasticsearch','start')
            sys.exit(rc1)
        else:
            sys.exit(1)

    elif 'stop' == sys.argv[1]:
        rc1=executeService('elasticsearch','stop')
        sys.exit(rc1)

    elif 'restart' == sys.argv[1]:

        executeService('elasticsearch','stop')
        time.sleep(.5)
        if reconfigureES()==0:
            rc1=executeService('elasticsearch','restart')
            sys.exit(rc1)
        else:
            sys.exit(1)

    elif 'status' == sys.argv[1]:
      rc1=executeService('elasticsearch',sys.argv[1])
      sys.exit(rc1)

    else:
        print "Unknown command"
        sys.exit(1)

  else:
    print "usage: %s start|stop|restart|status" % sys.argv[0]
    sys.exit(1)

sys.exit(0)
